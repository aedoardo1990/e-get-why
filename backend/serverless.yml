org: lokytech
app: egetwhy-app
service: backend

provider:
  name: aws
  runtime: nodejs20.x
  stage: ${opt:stage, 'dev'} # default stage is 'dev'
  environment:
    USERS_TABLE: ${self:custom.tableName}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [UsersTable, Arn]

functions:
  getUser:
    handler: src/users/handler.handler
    events:
      - http:
          path: users/{userId}
          method: get
  createUser:
    handler: src/users/handler.handler
    events:
      - http:
          path: users
          method: post
  s3EventHandler:
    handler: src/events/s3EventHandler.handler
    events:
      - s3:
          bucket: e-getwhy-bucket-dev
          event: s3:ObjectCreated:*
  dynamoEventHandler:
    handler: src/events/dynamoEventHandler.handler
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt:
              - UsersTable
              - StreamArn

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        TableName: ${self:custom.tableName}
    S3BucketMyBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: e-get-buckets-dev

custom:
  tableName: "users-table-${self:provider.stage}"
  bucketName: "e-getwhy-bucket-${self:provider.stage}"

package:
  exclude:
    - node_modules/**
    - dist/**
    - .serverless/**
    - .git/**
